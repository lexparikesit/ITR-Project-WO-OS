{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///C:/Project/web-ops/src/lib/db.ts"],"sourcesContent":["import { Pool } from \"pg\";\r\n\r\nlet pool: Pool | undefined;\r\n\r\nexport function getPool() {\r\n  if (!pool) {\r\n    const conn = process.env.DATABASE_URL;\r\n    if (!conn) throw new Error(\"DATABASE_URL missing\");\r\n    pool = new Pool({\r\n      connectionString: conn,\r\n      // Jika butuh SSL self-signed:\r\n      // ssl: { rejectUnauthorized: false },\r\n      max: 5,\r\n    });\r\n  }\r\n  return pool;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAEA,IAAI;AAEG,SAAS;IACd,IAAI,CAAC,MAAM;QACT,MAAM,OAAO,QAAQ,GAAG,CAAC,YAAY;QACrC,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;QAC3B,OAAO,IAAI,4GAAI,CAAC;YACd,kBAAkB;YAClB,8BAA8B;YAC9B,sCAAsC;YACtC,KAAK;QACP;IACF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///C:/Project/web-ops/src/app/api/pg/wo-monitoring/%5BwoID%5D/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getPool } from \"@/lib/db\";\r\n\r\nexport const runtime = \"nodejs\";\r\n\r\nexport async function GET(\r\n  _req: Request,\r\n  { params }: { params: { woId: string } }\r\n) {\r\n  try {\r\n    const pool = getPool();\r\n    const sql = `\r\n      SELECT id,\r\n             wo_id                  AS \"woId\",\r\n             problem_cause          AS \"problemCause\",\r\n             action_plan            AS \"actionPlan\",\r\n             pic                    AS \"pic\",\r\n             to_char(dateline_closing, 'YYYY-MM-DD') AS \"datelineClosing\",\r\n             updated_at             AS \"updatedAt\"\r\n      FROM wo_monitoring\r\n      WHERE wo_id = $1\r\n      LIMIT 1\r\n    `;\r\n    const { rows } = await pool.query(sql, [params.woId]);\r\n    return NextResponse.json({ data: rows[0] ?? null });\r\n  } catch (e: any) {\r\n    return NextResponse.json({ error: e?.message || \"DB error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;;;;AAEO,MAAM,UAAU;AAEhB,eAAe,IACpB,IAAa,EACb,EAAE,MAAM,EAAgC;IAExC,IAAI;QACF,MAAM,OAAO,IAAA,6HAAO;QACpB,MAAM,MAAM,CAAC;;;;;;;;;;;IAWb,CAAC;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,KAAK,CAAC,KAAK;YAAC,OAAO,IAAI;SAAC;QACpD,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,MAAM,IAAI,CAAC,EAAE,IAAI;QAAK;IACnD,EAAE,OAAO,GAAQ;QACf,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO,GAAG,WAAW;QAAW,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}}]
}